{
    "hints": {},
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDEKY2FsbHN1YiBjbGVhcnN0YXRlXzAKaW50Y18wIC8vIDEKcmV0dXJuCgovLyBjbGVhcl9zdGF0ZQpjbGVhcnN0YXRlXzA6CnByb3RvIDAgMAppbnRjXzAgLy8gMQpyZXR1cm4="
    },
    "schema": {
        "local": {
            "declared": {
                "LOCAL_WHITELISTED": {
                    "type": "uint64",
                    "key": "LOCAL_WHITELISTED",
                    "descr": ""
                },
                "LOCAL_DEPOSITED": {
                    "type": "uint64",
                    "key": "LOCAL_DEPOSITED",
                    "descr": ""
                },
                "LOCAL_REGISTERED": {
                    "type": "uint64",
                    "key": "LOCAL_REGISTERED",
                    "descr": ""
                },
                "LOCAL_VOTED": {
                    "type": "uint64",
                    "key": "LOCAL_VOTED",
                    "descr": ""
                },
                "LOCAL_OPT_AMOUNT": {
                    "type": "uint64",
                    "key": "LOCAL_OPT_AMOUNT",
                    "descr": ""
                },
                "LOCAL_OPT_REWARD_AMOUNT": {
                    "type": "uint64",
                    "key": "LOCAL_OPT_REWARD_AMOUNT",
                    "descr": ""
                }
            },
            "reserved": {}
        },
        "global": {
            "declared": {
                "ADMIN": {
                    "type": "bytes",
                    "key": "ADMIN",
                    "descr": "Admin Address for the Optimum Application."
                },
                "GLOBAL_PAUSED": {
                    "type": "uint64",
                    "key": "GLOBAL_PAUSED",
                    "descr": ""
                },
                "GLOBAL_GOVERNANCE_NONCE": {
                    "type": "uint64",
                    "key": "GLOBAL_GOVERNANCE_NONCE",
                    "descr": ""
                },
                "GLOBAL_PERIOD_START": {
                    "type": "uint64",
                    "key": "GLOBAL_PERIOD_START",
                    "descr": ""
                },
                "GLOBAL_REWARD_DISTRIBUTION": {
                    "type": "uint64",
                    "key": "GLOBAL_REWARD_DISTRIBUTION",
                    "descr": ""
                },
                "GLOBAL_REGISTRATION_END": {
                    "type": "uint64",
                    "key": "GLOBAL_REGISTRATION_END",
                    "descr": ""
                },
                "GLOBAL_PERIOD_END": {
                    "type": "uint64",
                    "key": "GLOBAL_PERIOD_END",
                    "descr": ""
                },
                "GLOBAL_CUSTODIAL_DEPOSIT": {
                    "type": "uint64",
                    "key": "GLOBAL_CUSTODIAL_DEPOSIT",
                    "descr": ""
                },
                "GLOBAL_GOVERNANCE_REWARD_RATE_NUMBER": {
                    "type": "uint64",
                    "key": "GLOBAL_GOVERNANCE_REWARD_RATE_NUMBER",
                    "descr": ""
                },
                "GLOBAL_GOVERNANCE_REWARD_RATE_DECIMALS": {
                    "type": "uint64",
                    "key": "GLOBAL_GOVERNANCE_REWARD_RATE_DECIMALS",
                    "descr": ""
                },
                "GLOBAL_TOTAL_OPT_DISPERSED_AT_GOVERNANCE": {
                    "type": "uint64",
                    "key": "GLOBAL_TOTAL_OPT_DISPERSED_AT_GOVERNANCE",
                    "descr": ""
                },
                "GLOBAL_APP_BALANCE_AT_GOVERNANCE": {
                    "type": "uint64",
                    "key": "GLOBAL_APP_BALANCE_AT_GOVERNANCE",
                    "descr": ""
                },
                "GLOBAL_LAST_LOTTERY_DISPERSAL_TS": {
                    "type": "uint64",
                    "key": "GLOBAL_LAST_LOTTERY_DISPERSAL_TS",
                    "descr": ""
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "Optimum",
        "methods": [
            {
                "name": "pause_app",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "unpause_app",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_governance_timelines",
                "args": [
                    {
                        "type": "uint64",
                        "name": "arg_apt_asset_index"
                    },
                    {
                        "type": "uint64",
                        "name": "global_reward_distribution"
                    },
                    {
                        "type": "uint64",
                        "name": "global_registration_end"
                    },
                    {
                        "type": "uint64",
                        "name": "period_start"
                    },
                    {
                        "type": "uint64",
                        "name": "period_end"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_governance_reward_rate",
                "args": [
                    {
                        "type": "uint64",
                        "name": "reward_rate_number"
                    },
                    {
                        "type": "uint64",
                        "name": "reward_rate_decimal"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "whitelist_account",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "custodial_deposit",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "custodial_withdraw",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "opt_in_asa",
                "args": [
                    {
                        "type": "uint64",
                        "name": "opt_asset_index"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "exchange",
                "args": [
                    {
                        "type": "uint64",
                        "name": "opt_asset_index"
                    },
                    {
                        "type": "string",
                        "name": "arg_fee_address"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "register_custodial_wallets",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "vote_by_custodial_wallets",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "custodial_withdraw_rewards",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "custodial_close_wallets",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "disperse_lottery",
                "args": [
                    {
                        "type": "uint64",
                        "name": "opt_asset_index"
                    },
                    {
                        "type": "string",
                        "name": "fee_addr"
                    },
                    {
                        "type": "uint64",
                        "name": "reward_amount"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "VRF",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    }
}